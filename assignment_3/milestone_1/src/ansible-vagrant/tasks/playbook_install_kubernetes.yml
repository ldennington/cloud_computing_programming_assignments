# Need to install docker first before running this book.
---
- name: "Install Le Kubernetes"
  hosts: # Need Host
  remote_user: cc
  gather_facts: no
  become: yes
  vars:
    dockerDaemon: {
      "exec-opts" : [
        "native.cgroupdriver=systemd"
      ]
    }

  tasks:
  - name: Start Docker Service
    ansible.builtin.service:
      name: docker
      enabled: yes
      state: started
    become: yes

  - name: "Apt Update"
    apt:
      name: aptitude
      state: latest
      update_cache: yes
      force_apt_get: yes

  - name: "Installing Apt Packages"
    apt:
      name: "{{ item }}"
      state: latest
    loop: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools', gnupg-agent]

  - name: "Add Key"
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: "Add Repo"
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: "Install Packages"
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    loop: ['kubeadm', 'kubelet', 'kubectl', 'kubernetes-cni']

  - name: Disable Swap
    command: swapoff -a

  - name: Disable Permanently
    replace:
      path: /etc/fstab
      regexp: '^(\s)([^#\n]+\s+)(\w+\s+)swap(\s+.)$'
      replace: '#\1\2\3swap\4'
      backup: yes

  - name: Create Hostname for Main
    ansible.builtin.hostname:
      name: kubernetes-main

  # I believe we will need this only for the second VM
  - name: Create Hostname for Worker
    ansible.builtin.hostname:
      name: kubernetes-worker

  - name: Load Docker Daemon
    ansible.builtin.copy:
      dest: /etc/docker/daemon.json
      content: "{{ dockerDaemon | to_json }}"

  - name: Restart Docker
    ansible.builtin.service:
      name: docker
      state: restarted
      daemon_reload: true

  - name: Restart Kublet
    ansible.builtin.service:
      name: kubelet
      state: restarted
      daemon_reload: true

  - name: Init Cluster
    shell: kubeadm init --node-name kubernetes-main --pod-network-cidr=10.244.0.0/16

  - name: Check for Admin.Conf
    stat:
      path: /etc/kubernetes/admin.conf

  - name: Copy Admin.Conf
    ansible.builtin.copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/ubuntu/.kube/config
      remote_src: yes
      owner: ubuntu

  - name: Chmod Admin.Conf
    file:
      path: /home/ubuntu/.kube/config
      owner: ubuntu
      group: ubuntu
      mode: 0644

  - name: Install Flannel
    shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    become: no
...
