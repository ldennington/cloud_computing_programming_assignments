Vagrant.configure("2") do |config|
   # Using Ubuntu 20.04 Focal Fossa
   config.vm.box = "ubuntu/focal64"

   config.vm.provider "virtualbox" do |vb|
      # No need to show GUI on startup
      vb.gui = false
      vb.memory = "2048"
   end

   # Create necessary directories on guest
   config.vm.provision "shell", path: "bootstrap.sh"

   # Copy necessary files to guest
   config.vm.provision "file", source: "~/.ssh/team4.pem", destination: "~/.ssh/"
   config.vm.provision "file", source: "./.ansible.cfg", destination: "~/.ansible.cfg"
   config.vm.provision "file", source: "./tasks", destination: "~/ansible-vagrant/tasks"
   config.vm.provision "file", source: "../kafka_config", destination: "~/kafka_config"
   config.vm.provision "file", source: "../docker_kubernetes", destination: "~/docker_kubernetes"
   config.vm.provision "file", source: "~/.config/openstack/clouds.yaml", destination: "~/.config/openstack/clouds.yaml"

   # Enure permissions on the  pem file are not too open
   $script = <<-SCRIPT
      chmod go-rwx ~/.ssh/team4.pem
   SCRIPT
   config.vm.provision "shell", inline: $script, privileged: false

   # Provision/configure ansible
   config.vm.provision "ansible_local" do |ansible|
     ansible.playbook = "./tasks/playbook_main_set_up.yml"
     ansible.tags = "assignment3_milestone1"
     ansible.verbose = true
     ansible.install = true  # installs ansible and Python
     ansible.limit = "all"
     ansible.inventory_path = "MyInventory"
     ansible.galaxy_role_file = "requirements.yml"
     ansible.galaxy_command = "ansible-galaxy install -r requirements.yml"
   end
 end
